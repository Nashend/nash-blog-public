@page "/admin/manage-subscribers"
@using NashBlog.Data.Entities
@using Microsoft.AspNetCore.Components.QuickGrid

@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject ISubcribeService SubscribeService

<PageTitle>@Utils.GetPageTitle("Manage Subscribers")</PageTitle>

<AdminHeader Title="Manage Subscribers" />

@if(_isLoading)
{
    <Loader LoaderText="Fetching subscribers..." />    
}

<QuickGrid ItemsProvider="_subscribersProvider" Pagination="_paginationState" class="table table-bordered table-striped">
    <PropertyColumn Property="c => c.Name" />
    <PropertyColumn Property="c => c.Email" />
    <PropertyColumn Property="c => c.SubscribedOn" Format="MMM-dd-yyyy hh:mm:ss" Title="Subscribed on" />
</QuickGrid>
<Paginator State="_paginationState" />

@code {
    private bool _isLoading;
    private GridItemsProvider<Subscriber>? _subscribersProvider;

    private const int PAGE_SIZE = 10;
    private PaginationState _paginationState = new()
        {
            ItemsPerPage = PAGE_SIZE
        };

    protected override async Task OnInitializedAsync()
    {
        _subscribersProvider = async request =>
        {
            _isLoading = true;
            StateHasChanged();

            var result = await SubscribeService.GetSubscribersAsync(request.StartIndex, request.Count ?? PAGE_SIZE);

            _isLoading = false;
            StateHasChanged();

            return GridItemsProviderResult.From(result.Records, result.TotalCount);
        };
    }
}
